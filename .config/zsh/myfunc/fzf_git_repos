#!/data/data/com.termux/files/usr/bin/env zsh
# search for all git repos in home folder, then cd into selected one and git pull. (Is a bit slow)

set -o pipefail
if [[ -n "$DEBUG" ]]; then
  set -x
fi

function fail() {
  printf '%s\n' "$1" >&2  ## Send message to stderr. Exclude >&2 if you don't want it that way.
  exit "${2-1}"  ## Return a code specified by $2 or 1 by default.
}

function has() {
  # Check if a command is in $PATH
  which "$@" > /dev/null 2>&1
}

fzf_git_repos() {
  local dir
  zle -I
  dir=$(find ~/ -type d -name .git | sed 's/\/.git//' \
  | fzf --keep-right --cycle --bind alt-j:jump-accept \
  --history="${FZF_HISTORY_DIR}/repos") \
  && cd $dir && git pull
  # zle reset-prompt
}


if has git; then
  fzf_git_repos
else
  fail "Can't find git in $PATH"
fi
