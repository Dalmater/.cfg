# Colors
# https://github.com/tmux/tmux/issues/1246:
set -g  default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:RGB"

# Set the base index for windows to 1 instead 0
set -g  base-index 1

# Set the base index for panes to 1 instead of 0
set -g  pane-base-index 1
setw -g pane-base-index 1

# auto window rename
# setw -g allow-rename on
setw -g automatic-rename on

# renumber windows sequentially after closing
set -g  renumber-windows on

# activity
setw -g monitor-activity on
set -g  visual-activity off

# Window size and status
setw -g aggressive-resize on

# Set terminal title to reflect current window
set -g  set-titles on
# set -g set-titles-string "#I:#W"

# focus events enabled for supported terminals
set -g  focus-events on

# enable terminal clipboard instead of external
# set -g set-clipboard on

set -g  buffer-limit 20

set -g  history-limit 5000
set -g  display-time 3000
set -g  display-panes-time 2000
set -g  status-interval 5
setw -g clock-mode-colour colour1

# Cursor shape (ssh)
# set -g  xterm-keys on
# set -ga terminal-overrides ",screen*:Ss=^[[%p1%d q:Se=^[[2 q"

# Vim compatability
set -sg escape-time 5 # fix vim esc delay
set -sg repeat-time 600

### Key bindings ###
# Vi keys & copypaste mode
setw -g mode-keys vi

# emacs keys in tmux command prompt (prefix + :)
set -g  status-keys emacs

# Make XTerm key bindings work, like C-<left> for skipping left 1 word
setw -g xterm-keys on

# C-b is not acceptable -- Vim uses it
# set -g prefix2 C-z
unbind-key C-b
set -g prefix C-a
bind C-a  send-prefix

# -- buffers --
# unbind p
bind b    list-buffers  # list paste buffers
bind p    paste-buffer  # paste from the top buffer
bind P    choose-buffer # choose paste buffer

# splitting panes with | and -
bind |    split-window -h
bind -    split-window -v

# hjkl Vim pane navigation
bind h    select-pane -L
bind j    select-pane -D
bind k    select-pane -U
bind l    select-pane -R

# Use Vim movement keys(uppercase) for resizing panes.
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# maximize current pane
bind + run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'

bind >    swap-pane -D
bind <    swap-pane -U
# bind <    swap-window -d -t -1 # -t :-
# bind >    swap-window -d -t +1 # -t :+

bind -r p previous-window
bind -r n next-window
bind a    new-window
bind Tab  last-window
bind k    kill-pane
bind C-q  kill-session
bind Q    kill-session

# create session
bind C-c  new-session

bind l    switch-client -l

# find session
bind C-f  command-prompt -p find-session 'switch-client -t %%'

# trigger copy mode by
bind Space copy-mode
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi Space  if -F "#{selection_present}" { send -X clear-selection } { send -X begin-selection }
bind -T copy-mode-vi Enter  send -X copy-selection-and-cancel

# in copy mode:
## v to vi-like visual selection
bind -T copy-mode-vi v send -X begin-selection
## y to vi-like yank (copy to buffer)
# bind -T copy-mode-vi y send -X copy-selection-no-clear
bind -T copy-mode-vi y send -X copy-pipe-no-clear 'termux-clipboard-set'

# mouse support for copymode
bind -n MouseDrag1Pane copy-mode -M
bind -T copy-mode-vi MouseDrag1Pane    send -X begin-selection
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection

# Smart pane switching with awareness of vim splits (vim-tmux-navigation)
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n 'C-\' if-shell "$is_vim" "send-keys 'C-\\\\'" "select-pane -l"
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n 'C-h' if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n 'C-j' if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n 'C-k' if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n 'C-l' if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
"bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
"bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind -T copy-mode-vi 'C-h' select-pane -L
bind -T copy-mode-vi 'C-j' select-pane -D
bind -T copy-mode-vi 'C-k' select-pane -U
bind -T copy-mode-vi 'C-l' select-pane -R
bind -T copy-mode-vi 'C-\' select-pane -l

# clear screen
bind -n C-l  send-keys 'C-l'

# Hide status bar on demand
bind C-t if -F '#{s/off//:status}' 'set status off' 'set status on'

# prefix R to rename window
bind R command-prompt 'rename-window %%'

# m/M to pull/send a pane to another window
bind m command-prompt -p "Send pane to:"  "join-pane -t '%%'"
bind M command-prompt -p "Merge pane from:"  "join-pane -s '%%'"

# easily toggle synchronization (e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on \; display-message "Panes synchronized!"
bind E setw synchronize-panes off \; display-message "Panes unsynchronized!"

# Reaload settings
# bind R source-file /data/data/com.termux/files/usr/etc/tmux.conf \; display-message ​"Global Config Reloaded!"
bind r source-file /data/data/com.termux/files/home/.config/tmux/tmux.conf \; display-message ​"User Config Reloaded!"

# This tmux statusbar was created by tmuxline.vim
# on Thu, 19 Aug 2021 (gruvbox-dark)
set -g status-justify "left"
set -g status "on"
set -g status-left-style "none"
set -g message-command-style "fg=#dbcba2,bg=#504945"
set -g status-right-style "none"
set -g pane-active-border-style "fg=#7c6f64"
set -g status-style "none,bg=#3c3836"
set -g message-style "fg=#dbcba2,bg=#504945"
set -g pane-border-style "fg=#3c3836"
set -g status-right-length "100"
set -g status-left-length "100"
setw -g window-status-activity-style "underscore,fg=#a89984,bg=#3c3836"
setw -g window-status-separator ""
setw -g window-status-style "none,fg=#a89984,bg=#3c3836"
set -g status-left "#[fg=#a89984,bg=#3c3836] #S:#P#[fg=#3c3836,bg=#3c3836,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=#504945,bg=#3c3836,nobold,nounderscore,noitalics]#[fg=#a89984,bg=#504945] Ctu:#{continuum_status} #[fg=#7c6f64,bg=#504945]#[bg=#7c6f64,fg=#32302f] %R "
setw -g window-status-format "#[fg=#3c3836,bg=#3c3836,nobold,nounderscore,noitalics]#[default] #I:#W #[fg=#3c3836,bg=#3c3836,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[fg=#3c3836,bg=#504945,nobold,nounderscore,noitalics]#[fg=#ebdbb2,bg=#504945] #I:#W #[fg=#504945,bg=#3c3836,nobold,nounderscore,noitalics]"

##### Plugins #####
# Supports `github_username/repo` or full URL
# Examples:
# github_username/plugin_name
# git@github.com/user/plugin
# git@bitbucket.cmo/user/plugin
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-copycat'
# set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
run -b '~/.config/tmux/plugins/tpm/tpm'

# plugin settings
set -g @resurrect-dir '~/.config/tmux/resurrect'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-nvim 'session'
#Restore all programs (dangerous!):
# set -g @resurrect-processes ':all:'
set -g @continuum-save-interval '9'
# set -g @continuum-boot 'on'
set -g @continuum-restore 'on'
TMUX_FZF_OPTIONS="-d 60% -m --preview-window 'down:6:wrap:border'"
# TMUX_FZF_PREVIEW=1
TMUX_FZF_ORDER="session|pane|window|command|keybinding|process|clipboard"
TMUX_FZF_PANE_FORMAT="[#{window_name}] #{pane_current_command} [#{pane_width}x#{pane_height}] #{?pane_active,[active],[inactive]}"
TMUX_FZF_WINDOW_FORMAT="[#{window_name}] #{pane_current_command} [#{window_width}x#{window_height}] #{?window_active,[active],[inactive]}"
TMUX_FZF_SESSION_FORMAT="[#{window_name}] #{pane_current_command} [#{session_windows} Windows] #{?pane_active,[active pane],[inactive pane]}"
