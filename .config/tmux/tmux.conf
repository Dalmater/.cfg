# Set the default shell
set -g default-shell /data/data/com.termux/files/usr/bin/zsh

# How to use true colors in vim under tmux?
# for 2.6 and higher
# https://github.com/tmux/tmux/issues/1246:
set -g  default-terminal "tmux-256color"
# set -g  default-terminal "screen-256color"
# set -g  default-terminal "xterm-256color"
# set -ga terminal-overrides ",*256col*:TC"
set -ga terminal-overrides ",*256col*:RGB"

# Set the base index for windows to 1 instead 0
set -g  base-index 1

# Set the base index for panes to 1 instead of 0
set -g  pane-base-index 1
setw -g pane-base-index 1

# auto window rename
# setw -g allow-rename on
setw -g automatic-rename on

# renumber windows sequentially after closing
set -g  renumber-windows on

# activity
setw -g monitor-activity on
set -g  visual-activity on

# Window size and status
setw -g aggressive-resize on

# Set terminal title to reflect current window
set -g  set-titles on
# set -g set-titles-string "#I:#W"

# focus events enabled for supported terminals
set -g  focus-events on

# enable terminal clipboard instead of external
# set -g set-clipboard on
set -g  buffer-limit 20

set -g  history-limit 6000
set -g  history-file ~/.config/tmux/.tmux_history
set -g  display-time 3000
set -g  display-panes-time 2000
set -g  status-interval 5
setw -g clock-mode-colour colour4

# Vim compatability
set -sg escape-time 5 # fix vim esc delay
set -sg repeat-time 600

### Key bindings ###
# set -g extendet-keys on

# Vi keys & copypaste mode
setw -g mode-keys vi
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# emacs keys in tmux command prompt (prefix + :)
set -g  status-keys emacs

# Make XTerm key bindings work, like C-<left> for skipping left 1 word
setw -g xterm-keys on

# C-b is not acceptable -- Vim uses it
# set -g prefix2 C-z
set -g prefix2 none
unbind-key C-b
set -g prefix C-a
bind C-a  send-prefix

# splitting panes with | and -
bind |    split-window -h -c "#{pane_current_path}"
bind -    split-window -v -c "#{pane_current_path}"
bind _    split-window -fv -c "#{pane_current_path}"
bind "\\" split-window -fh -c "#{pane_current_path}"

# maximize current pane
bind + resize-pane -Z

# bind -r p previous-window
bind Tab  previous-window
bind BTab select-pane -t :.+
bind -r n next-window
bind a    last-window
bind C-k  unlink-window -k

bind C-q  kill-pane
bind Q    confirm-before -p "kill-session #S? (y/n)" kill-session

# bind D if -F '#{session_many_attached}' \
#     'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
#     'display "Session has only 1 client attached"'

# create session
bind C-c  new-session

# find session
bind C-f  command-prompt -p find-session 'switch-client -t %%'

# trigger copy mode by
bind Space copy-mode

# in copy mode:
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi Space  if -F "#{selection_present}" { send -X clear-selection } { send -X begin-selection }
# bind -T copy-mode-vi Enter  send -X copy-selection-and-cancel
bind -T copy-mode-vi Enter  send -X copy-pipe-and-cancel ' -c "#{pane_current_path}"termux-clipboard-set'
## v to vi-like visual selection
bind -T copy-mode-vi v send -X begin-selection
## y to vi-like yank (copy to buffer)
# bind -T copy-mode-vi y send -X copy-selection-no-clear
# bind -T copy-mode-vi y send -X copy-selection-and-cancel
# bind -T copy-mode-vi y send -X copy-pipe-no-clear ' -c "#{pane_current_path}"termux-clipboard-set'
bind -T copy-mode-vi y send -X copy-pipe-and-cancel ' -c "#{pane_current_path}"termux-clipboard-set'
bind -T copy-mode-vi Y send-keys -X copy-end-of-line
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe ' -c "#{pane_current_path}"termux-clipboard-set' \; send -X clear-selection

# -- paste buffers --
bind b  list-buffers  # list paste buffers
bind p  paste-buffer  # paste from the top buffer
bind P  choose-buffer # choose paste buffer

# mouse support for copymode(tmux-copycat)
# bind -n MouseDrag1Pane copy-mode -M
# bind -T copy-mode-vi MouseDrag1Pane    send -X begin-selection
# bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection

# hjkl Vim pane navigation
bind -r h   select-pane -L
bind -r j   select-pane -D
bind -r k   select-pane -U
bind -r l   select-pane -R

# Use Vim movement keys(uppercase) for resizing panes.
bind -r H   resize-pane -L 2
bind -r J   resize-pane -D 2
bind -r K   resize-pane -U 2
bind -r L   resize-pane -R 2
bind -r M-h resize-pane -L 4
bind -r M-j resize-pane -D 4
bind -r M-k resize-pane -U 4
bind -r M-l resize-pane -R 4

version_pat='s/^tmux[^0-9]*([.0-9]+).*/\1/p'
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n 'C-h' if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n 'C-j' if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n 'C-k' if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n 'C-l' if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# setenv -g tmux_version "$tmux_version"
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
"bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
"bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind -T copy-mode-vi 'C-h' select-pane -L
bind -T copy-mode-vi 'C-j' select-pane -D
bind -T copy-mode-vi 'C-k' select-pane -U
bind -T copy-mode-vi 'C-l' select-pane -R
bind -T copy-mode-vi 'C-\' select-pane -l

# clear screen (overrides vim navigation key binding)
bind -n 'C-l'  send-keys 'C-l'

# Hide status bar on demand
bind C-t if -F '#{s/off//:status}' 'set status off' 'set status on'

# prefix R to rename window
bind R command-prompt 'rename-window %%'

# m/M to pull/send a pane to another window
bind m command-prompt -p "Send pane to:"  "join-pane -t '%%'" \; display-message "Pane joined"
bind M command-prompt -p "Merge pane from:"  "join-pane -s '%%'" \; display-message "Pane merged"

# easily toggle synchronization (e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on \; display-message "Panes synchronized!"
bind E setw synchronize-panes off \; display-message "Panes unsynchronized!"

# Reaload settings
# bind R source-file /data/data/com.termux/files/usr/etc/tmux.conf \; display-message ​"Global Config Reloaded!"
bind r source-file /data/data/com.termux/files/home/.config/tmux/tmux.conf \; display-message ​"User Config Reloaded!"

# This tmux statusbar was created by tmuxline.vim
# on Thu, 19 Aug 2021 (gruvbox-dark)
set -g  status-justify "left"
set -g  status "on"
set -g  status-left-style "none"
set -g  message-command-style "fg=#ebdbb2,bg=#3c3836"
set -g  status-right-style "none"
set -g  pane-active-border-style "fg=#83a598"
set -g  status-style "none,bg=#282828"
set -g  message-style "fg=#ebdbb2,bg=#3c3836"
set -g  pane-border-style "fg=#504945"
set -g  status-right-length "100"
set -g  status-left-length "100"
setw -g window-status-activity-style "fg=#a89984,bg=#282828"
setw -g window-status-separator ""
setw -g window-status-style "none,fg=#a89984,bg=#282828"
set -g  status-left "#[fg=#1d2021,bg=#7c6f64] #S  #P #[fg=#7c6f64,bg=#282828,nobold,nounderscore,noitalics]"
set -g  status-right "#[fg=#504945,bg=#282828,nobold,nounderscore,noitalics]#[fg=#a89984,bg=#504945]#{prefix_highlight}#[fg=#7c6f64,bg=#504945]#[bg=#7c6f64,fg=#282828] %R "
setw -g window-status-format "#[fg=#282828,bg=#282828,nobold,nounderscore,noitalics]#[default]#I:#W#[fg=#282828,bg=#282828,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[fg=#282828,bg=#504945,nobold,nounderscore,noitalics]#[fg=#d5c4a1,bg=#504945] #I:#W #[fg=#504945,bg=#282828,nobold,nounderscore,noitalics]"

# TMUX_FZF_OPTIONS="-d 50% --preview-window 'down:50%:wrap'"
TMUX_FZF_OPTIONS="-p -h 65% -w 85% --preview-window=35%,nohidden,wrap"
# TMUX_FZF_OPTIONS="--height 60% --preview-window=down:35%,nohidden,wrap"
TMUX_FZF_PREVIEW=1
# TMUX_FZF_MENU="sh\nsh ~/.config/zsh/tests/all.zsh\n"
TMUX_FZF_ORDER="session|pane|window|keybinding|clipboard|command|process"
TMUX_FZF_PANE_FORMAT="[#{window_name}] #{pane_current_command} [#{pane_width}x#{pane_height}] #{?pane_active,[active],[inactive]}"
TMUX_FZF_WINDOW_FORMAT="[#{window_name}] #{pane_current_command} [#{window_width}x#{window_height}] #{?window_active,[active],[inactive]}"
TMUX_FZF_SESSION_FORMAT="[#{window_name}] #{pane_current_command} [#{session_windows} Windows] #{?pane_active,[active pane],[inactive pane]}"

##### Plugins #####
# Supports `github_username/repo` or full URL
# Examples:
# github_username/plugin_name
# git@github.com/user/plugin
# git@bitbucket.cmo/user/plugin
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'laktak/extrakto'

# plugin settings
set -g @resurrect-dir '~/.config/tmux/resurrect'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-processes '"nvim->nvim +SLoad"'
#Restore all programs (dangerous!):
set -g @resurrect-processes ':all:'
set -g @resurrect-hook-pre-restore-pane-processes 'tmux switch-client -n && tmux kill-session -t=0'
set -g @continuum-boot 'on'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '10'

set -g @prefix_highlight_fg '#fe8019,bold' # default is 'colour231'
set -g @prefix_highlight_bg '#504945'  # default is 'colour04'
set -g @prefix_highlight_empty_prompt ' ... '  # default is '' (empty char)
set -g @prefix_highlight_empty_attr 'fg=#a89984,bg=#504945' # default is 'fg=default,bg=default'
# set -g @prefix_highlight_prefix_prompt 'Wait'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_prompt 'Copy'
set -g @prefix_highlight_copy_mode_attr 'fg=#fabd2f,bold,bg=#504945' # default is 'fg=default,bg=yellow'
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_sync_prompt 'Sync'
set -g @prefix_highlight_sync_mode_attr 'fg=#8ec07c,bold,bg=#504945' # default is 'fg=default,bg=yellow'
# set -g @prefix_highlight_empty_has_affixes 'on' # default is 'off'
# set -g @prefix_highlight_output_prefix ' '
# set -g @prefix_highlight_output_suffix ' '

set -g @extrakto_key "bspace"
set -g @extrakto_clip_tool "termux-clipboard-set"
set -g @extrakto_fzf_layout "reverse"

# auto install tpm
if "test ! -d ~/.config/tmux/plugins/tpm" \
  "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm \
  && ~/.config/tmux/plugins/tpm/bin/install_plugins'"

run -b '~/.config/tmux/plugins/tpm/tpm'
